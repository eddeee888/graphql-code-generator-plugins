{
  "name": "typescript-resolver-files-e2e",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "packages/typescript-resolver-files-e2e/src",
  "projectType": "library",
  "tags": [],
  "implicitDependencies": ["typescript-resolver-files"],
  "targets": {
    "e2e": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "nx e2e-run typescript-resolver-files-e2e -c clean-run",
          "bash tools/testing/bin/assert-e2e.sh \"{projectRoot}/src/**/*.ts\""
        ],
        "parallel": false
      }
    },
    "e2e-cleanup": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "rimraf -g \"{projectRoot}/src/**/resolvers/\"",
          "rimraf -g \"{projectRoot}/src/**/rslvrs/\"",
          "rimraf -g \"{projectRoot}/src/**/*.generated.*\"",
          "rimraf -g \"{projectRoot}/src/**/*.gen.*\"",
          "rimraf -g \"{projectRoot}/src/**/generated\"",
          "tsx --tsconfig={projectRoot}/tsconfig.json {projectRoot}/src/test-mappers-vs-schema-types/testSetup.ts",
          "tsx --tsconfig={projectRoot}/tsconfig.json {projectRoot}/src/test-resolvers-auto-wireup/testSetup.ts"
        ],
        "parallel": false
      },
      "configurations": {
        "test-merged": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-merged/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-merged/**/*.generated.*\""
          ],
          "parallel": false
        },
        "test-modules": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-modules/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-modules/**/*.generated.*\""
          ],
          "parallel": false
        },
        "test-whitelisted": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-whitelisted/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-whitelisted/**/*.generated.*\""
          ],
          "parallel": false
        },
        "test-external-resolvers": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-external-resolvers/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-external-resolvers/**/*.generated.*\""
          ],
          "parallel": false
        },
        "test-config-overrides": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-config-overrides/**/rslvrs/\"",
            "rimraf -g \"{projectRoot}/src/test-config-overrides/**/*.gen.*\""
          ],
          "parallel": false
        },
        "test-mappers": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-mappers/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-mappers/**/*.generated.*\""
          ],
          "parallel": false
        },
        "test-mappers-vs-schema-types": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-mappers-vs-schema-types/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-mappers-vs-schema-types/**/*.generated.*\"",
            "tsx --tsconfig={projectRoot}/tsconfig.json {projectRoot}/src/test-mappers-vs-schema-types/testSetup.ts"
          ],
          "parallel": false
        },
        "test-config-ts": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-config-ts/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-config-ts/**/*.generated.*\""
          ],
          "parallel": false
        },
        "test-modules-typedefs-file-mode": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-modules-typedefs-file-mode/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-modules-typedefs-file-mode/**/*.generated.*\""
          ],
          "parallel": false
        },
        "test-modules-resolver-main-file-mode": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-modules-resolver-main-file-mode/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-modules-resolver-main-file-mode/**/*.generated.*\""
          ],
          "parallel": false
        },
        "test-scalars-module": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-scalars-module/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-scalars-module/**/*.generated.*\""
          ],
          "parallel": false
        },
        "test-resolver-generation": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-resolver-generation/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-resolver-generation/**/*.generated.*\""
          ],
          "parallel": false
        },
        "test-add-option": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-add-option/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-add-option/**/*.generated.*\""
          ],
          "parallel": false
        },
        "test-extended-object-types": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-extended-object-types/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-extended-object-types/**/*.generated.*\""
          ],
          "parallel": false
        },
        "test-nested-domain-modules": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-nested-domain-modules/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-nested-domain-modules/**/*.generated.*\""
          ],
          "parallel": false
        },
        "test-resolvers-auto-wireup": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-resolvers-auto-wireup/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-resolvers-auto-wireup/**/*.generated.*\"",
            "tsx --tsconfig={projectRoot}/tsconfig.json {projectRoot}/src/test-resolvers-auto-wireup/testSetup.ts"
          ],
          "parallel": false
        },
        "test-federation": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-federation/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-federation/**/*.generated.*\""
          ],
          "parallel": false
        },
        "test-deep-modules": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-deep-modules/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-deep-modules/**/generated\""
          ],
          "parallel": false
        },
        "test-complex-synth-generic-wrapper": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-complex-synth-generic-wrapper/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-complex-synth-generic-wrapper/**/*.generated.*\""
          ],
          "parallel": false
        },
        "test-resolver-filename-case": {
          "commands": [
            "rimraf -g \"{projectRoot}/src/test-resolver-filename-case/**/resolvers/\"",
            "rimraf -g \"{projectRoot}/src/test-resolver-filename-case/**/*.generated.*\""
          ],
          "parallel": false
        }
      }
    },
    "e2e-run": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "nx graphql-codegen typescript-resolver-files-e2e -c test-merged --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-modules --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-whitelisted --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-external-resolvers --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-config-overrides --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-mappers --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-mappers-vs-schema-types --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-config-ts --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-modules-typedefs-file-mode --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-modules-resolver-main-file-mode --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-esm-import --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-scalars-module --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-resolver-generation --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-add-option --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-extended-object-types --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-nested-domain-modules --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-resolvers-auto-wireup --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-federation --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-deep-modules --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-complex-synth-generic-wrapper --verbose",
          "nx graphql-codegen typescript-resolver-files-e2e -c test-resolver-filename-case --verbose"
        ],
        "parallel": false
      },
      "configurations": {
        "clean-run": {
          "commands": [
            "nx e2e-cleanup typescript-resolver-files-e2e",
            "nx e2e-run typescript-resolver-files-e2e"
          ],
          "parallel": false
        }
      },
      "dependsOn": ["prepare-e2e-modules"]
    },
    "graphql-codegen": {
      "executor": "@eddeee888/nx-graphql-code-generator:codegen",
      "options": {},
      "configurations": {
        "test-merged": {
          "configFile": "{projectRoot}/src/test-merged/codegen.yml"
        },
        "test-modules": {
          "configFile": "{projectRoot}/src/test-modules/codegen.ts"
        },
        "test-whitelisted": {
          "configFile": "{projectRoot}/src/test-whitelisted/codegen.yml"
        },
        "test-external-resolvers": {
          "configFile": "{projectRoot}/src/test-external-resolvers/codegen.yml"
        },
        "test-config-overrides": {
          "configFile": "{projectRoot}/src/test-config-overrides/codegen.ts"
        },
        "test-mappers": {
          "configFile": "{projectRoot}/src/test-mappers/codegen.ts"
        },
        "test-mappers-vs-schema-types": {
          "configFile": "{projectRoot}/src/test-mappers-vs-schema-types/codegen.ts"
        },
        "test-config-ts": {
          "configFile": "{projectRoot}/src/test-config-ts/codegen.ts"
        },
        "test-modules-typedefs-file-mode": {
          "configFile": "{projectRoot}/src/test-modules-typedefs-file-mode/codegen.yml"
        },
        "test-modules-resolver-main-file-mode": {
          "configFile": "{projectRoot}/src/test-modules-resolver-main-file-mode/codegen.yml"
        },
        "test-esm-import": {
          "configFile": "{projectRoot}/src/test-esm-import/codegen.ts"
        },
        "test-scalars-module": {
          "configFile": "{projectRoot}/src/test-scalars-module/codegen.ts"
        },
        "test-resolver-generation": {
          "configFile": "{projectRoot}/src/test-resolver-generation/codegen.ts"
        },
        "test-add-option": {
          "configFile": "{projectRoot}/src/test-add-option/codegen.ts"
        },
        "test-extended-object-types": {
          "configFile": "{projectRoot}/src/test-extended-object-types/codegen.ts"
        },
        "test-nested-domain-modules": {
          "configFile": "{projectRoot}/src/test-nested-domain-modules/codegen.ts"
        },
        "test-resolvers-auto-wireup": {
          "configFile": "{projectRoot}/src/test-resolvers-auto-wireup/codegen.ts"
        },
        "test-federation": {
          "configFile": "{projectRoot}/src/test-federation/codegen.ts"
        },
        "test-deep-modules": {
          "configFile": "{projectRoot}/src/test-deep-modules/codegen.ts"
        },
        "test-complex-synth-generic-wrapper": {
          "configFile": "{projectRoot}/src/test-complex-synth-generic-wrapper/codegen.ts"
        },
        "test-resolver-filename-case": {
          "configFile": "{projectRoot}/src/test-resolver-filename-case/codegen.ts"
        }
      },
      "dependsOn": ["prepare-e2e-modules"]
    },
    "prepare-e2e-modules": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "rimraf node_modules/@eddeee888/gcg-server-config",
          "cp -r dist/packages/server-config node_modules/@eddeee888/gcg-server-config",
          "rimraf node_modules/@eddeee888/gcg-typescript-resolver-files",
          "cp -r dist/packages/typescript-resolver-files node_modules/@eddeee888/gcg-typescript-resolver-files"
        ],
        "parallel": false
      },
      "dependsOn": ["^build"]
    },
    "lint": {
      "executor": "@nx/eslint:lint"
    }
  }
}
