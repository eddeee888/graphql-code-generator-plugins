# https://www.graphql-code-generator.com/docs/config-reference/codegen-config
schema:
  - packages/typescript-resolver-files-e2e/src/test-external-resolvers/**/*.graphqls
  - packages/typescript-resolver-files-e2e/src/test-external-resolvers/**/*.graphqls.ts
hooks:
  afterAllFileWrite:
    - prettier --write
generates:
  packages/typescript-resolver-files-e2e/src/test-external-resolvers/modules:
    preset: '@eddeee888/gcg-typescript-resolver-files'
    presetConfig:
      scalarsOverrides:
        DateTimeNamedImport:
          resolver: ~graphql-scalars#DateTimeNamedResolver
        DateTimeSameNamedImport:
          resolver: ~graphql-scalars#DateTimeSameNamedImportResolver
        BigIntNamedWithAlias:
          resolver: ~graphql-scalars#BigIntResolver as BigIntNamedWithAliasResolver
        BigIntSameNamedWithAlias:
          resolver: ~graphql-scalars#BigIntResolver as BigIntSameNamedWithAliasResolver
        AbsoluteDefault:
          resolver: ~graphql-scalars#default as AbsoluteDefaultResolver
          type: bigint
        RelativeDefault:
          resolver: scalars/DefaultScalar.ts#default as RelativeDefaultResolver
        RelativeNamedImport:
          resolver: scalars/Scalars.ts#NamedImportResolver
          type: number
        RelativeNamedImportWithAlias:
          resolver: scalars/Scalars.ts#NamedImportResolver as NamedImportWithAliasResolver
          type: string
      externalResolvers:
        Query.me: '~@org/meResolver#default as meResolver'
        Profile: '~modules/otherResolvers.js#Profile as ProfileResolver'
        User: 'otherResolvers#User as UserResolver'
        UserPayload: 'otherResolvers.js#UserPayload as UserPayloadResolver'
